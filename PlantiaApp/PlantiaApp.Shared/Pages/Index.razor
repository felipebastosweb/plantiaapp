@page "/"

@using PlantiaApp.Shared.Components.Authorization.Records

@using PlantiaApp.Shared.Components.Authorization.Forms

<!--
@using PlantiaApp.Shared.Components.Authorization.Services

@inject UserSQLiteService userService
-->

<PageTitle>Hello</PageTitle>

<h1>Oi! Vamos plantar.</h1>
<p>Ajudamos pessoas a deixarem o planeta mais verde.</p>

@if (UserRegistereds != null && UserRegistereds!.Count() > 0)
{
    <article class="container">
        <header class="row">
            <article class="col-12">
                <h5>Login Rápido</h5>
            </article>
        </header>
        <section class="row">
            @foreach (var user in UserRegistereds)
            {
                <article class="col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@user.Username</h5>
                        </div>
                    </div>
                </article>
            }
        </section>
    </article>
}


<article class="container">
    <section class="row">
        <article class="col-xs-12 col-md-6">
            <SignUpForm />
        </article>
        <article class="col-xs-12 col-md-6">
            <LoginForm />
        </article>
    </section>
</article>


@code
{
    /***
     User Story: Como usuário desejo ver a lista dos usuários registrados no dispositivo para fazer o login rápido
        Scenary: Não existem usuários cadastrados ou nesse aplicativo
            When - A página carrega verifica que não existem usuários no dispositivo
            Than - Não exibe a lista de usuários para login rápido
        Scenary: Existe pelo menos um usuário que se cadastrou ou logou nesse aplicativo
            When - A página encontra usuários cadastrados no dispositivo
            And - exibe a Lista os usuários para login rápido
            Than - O usuário clica no card para fazer o login rápido
            And - é direcionado para a página Home
     **/

    public List<UserRegisteredOutput>? UserRegistereds { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        // UserRegistereds = await userService.AllAsync();
    }

}
