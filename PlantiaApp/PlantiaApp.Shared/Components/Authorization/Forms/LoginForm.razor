@using PlantiaApp.Shared.Components.Authorization.Records

@inject NavigationManager Navigate


<h3>LoginForm</h3>


<EditForm Model="UserInput" OnSubmit="OnSubmitClick">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3 Username">
        <label>Username</label>
        @if (UsernameIsValid())
        {
            <InputText @bind-Value="UserInput!.Username" class="form-control Valid" />
        }
        else
        {
            <InputText @bind-Value="UserInput!.Username" class="form-control InValid" />
        }
    </div>
    <div class="mb-3 Password">
        <label>Username</label>
        @if (PasswordIsValid())
        {
            <InputText @bind-Value="UserInput!.Password" type="password" class="form-control Valid" />
        }
        else
        {
            <InputText @bind-Value="UserInput!.Password" type="password" class="form-control InValid" />
        }
    </div>
    <div class="mb-b3">
        <InputCheckbox @bind-Value="UserInput!.KeepConnected" class="form-check-input" />
        <label class="form-check-label">
            I want keep me connected.
        </label>
    </div>
    <div class="mb-3">
        <button type="submit" class="btn btn-success">Confirm</button>
    </div>
</EditForm>


@code {
    /***
    * Como visitante desejo
    **/

    private LoginInput? UserInput { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private bool UsernameIsValid()
    {
        return string.IsNullOrEmpty(UserInput!.Username);
    }

    private bool PasswordIsValid()
    {
        return string.IsNullOrEmpty(UserInput!.Password);
    }

    public void OnSubmitClick()
    {
        //SignUpFormObservable.UnSubscribe(new SignUpFormObserver(this));
        Navigate.NavigateTo("/home");
    }

}
